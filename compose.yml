name: worklab

services:
  step-ca:
   image: smallstep/step-ca
   restart: unless-stopped
   environment:
     - "DOCKER_STEPCA_INIT_NAME=Smallstep"
     # required in order traefik trust to call https://step-ca:9000
     - "DOCKER_STEPCA_INIT_DNS_NAMES=localhost,step-ca" 
     - "DOCKER_STEPCA_INIT_REMOTE_MANAGEMENT=true"
     - "DOCKER_STEPCA_INIT_ACME=true"
   volumes:
     - "./step-ca:/home/step"
   ports:
     - "9000:9000"

  traefik:
    image: "traefik:v3.3"
    container_name: "traefik"
    restart: unless-stopped
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.caserver=https://step-ca:9000/acme/acme/directory"
      - "--certificatesresolvers.myresolver.acme.email=postmaster@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      # TIPS: required in order to trust tls with https://step-ca:9000, must bootstrap docker host with step-ca see README.md
      - "/etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro" 
    networks:
      default:
        aliases:
          # TIPS: used in order step-ca resolved it to traefik during acme challenge
          # TODO: replace by https://gist.github.com/boomshadow/20677ef02f110e448ee058ae6149af3a
          - whoami.localhost 
          - vaultwarden.localhost
          - harness.localhost
          - homepage.localhost
          - atuin.localhost
          - grafana.localhost
  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=myresolver"
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    environment:
      DOMAIN: "https://vaultwarden.localhost"
    volumes:
      - ./vw-data/:/data/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.rule=Host(`vaultwarden.localhost`)"
      - "traefik.http.routers.vaultwarden.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden.tls.certresolver=myresolver"
  harness:
    image: harness/harness
    container_name: harness
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - "GITNESS_URL_CONTAINER=https://harness.localhost"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./harness:/data"
      # TIPS: required in order to trust tls from the host. ex. proxy with tls rewrite
      - "/etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro" 
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.harness.rule=Host(`harness.localhost`)"
      - "traefik.http.routers.harness.entrypoints=websecure"
      - "traefik.http.routers.harness.tls.certresolver=myresolver"
      - "traefik.http.services.harness.loadbalancer.server.port=3000"
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    volumes:
      - ./homepage:/app/config # Make sure your local config directory exists
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      HOMEPAGE_ALLOWED_HOSTS: homepage.localhost # required, may need port. See gethomepage.dev/installation/#homepage_allowed_hosts
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homepage.rule=Host(`homepage.localhost`)"
      - "traefik.http.routers.homepage.entrypoints=websecure"
      - "traefik.http.routers.homepage.tls.certresolver=myresolver"
      - "traefik.http.services.homepage.loadbalancer.server.port=3000"

  atuin:
    restart: unless-stopped
    image: ghcr.io/atuinsh/atuin:v18.5.0
    container_name: atuin
    command: server start
    volumes:
      - "./atuin/config:/config"
    links:
      - postgresql:db
    environment:
      ATUIN_HOST: "0.0.0.0"
      ATUIN_OPEN_REGISTRATION: "true"
      ATUIN_DB_URI: postgres://$ATUIN_DB_USERNAME:$ATUIN_DB_PASSWORD@db/$ATUIN_DB_NAME
      RUST_LOG: info,atuin_server=debug
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.atuin.rule=Host(`atuin.localhost`)"
      - "traefik.http.routers.atuin.entrypoints=websecure"
      - "traefik.http.routers.atuin.tls.certresolver=myresolver"
      - "traefik.http.services.atuin.loadbalancer.server.port=8888"
  postgresql:
    image: postgres:14
    restart: unless-stopped
    volumes: # Don't remove permanent storage for index database files!
      - "./atuin/database:/var/lib/postgresql/data/"
    environment:
      POSTGRES_USER: ${ATUIN_DB_USERNAME}
      POSTGRES_PASSWORD: ${ATUIN_DB_PASSWORD}
      POSTGRES_DB: ${ATUIN_DB_NAME}

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    volumes: 
      - "/:/rootfs"
      - "/var/run:/var/run"
      - "/sys:/sys"
      - "/var/lib/docker/:/var/lib/docker"
      - "/dev/disk/:/dev/disk"
    privileged: true
    devices: 
      - "/dev/kmsg"

  loki:
    image: grafana/loki:latest
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    restart: unless-stopped
    volumes:
      - ./promtail/config.yaml:/etc/promtail/promtail-config.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
    depends_on:
      - loki
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes: 
      - "./prometheus/config.yml:/etc/prometheus/prometheus.yml"
    depends_on:
      - cadvisor

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - DS_PROMETHEUS=prometheus
    volumes: 
      - "grafana-data:/var/lib/grafana"
      - "./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml"
      - "./grafana/dashboard.json:/var/lib/grafana/dashboards/dashboard.json"
      - "./grafana/default.yaml:/etc/grafana/provisioning/dashboards/default.yaml"
    depends_on:
      - prometheus
      - loki
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=myresolver"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"

volumes:
  grafana-data: